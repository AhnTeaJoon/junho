<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ggiri.root.mybatis.project.ProjectMapper">

	<resultMap type="com.ggiri.root.project.dto.ProjectDTO" id="project">
		<id property="projectNum" column="projectNum"/>
		<result property="title" column="title"/>
		<result property="content" column="content"/>
		<result property="prodate" column="prodate"/>
		<result property="proHit" column="proHit"/>
		<result property="id" column="id"/>
	</resultMap>

	<resultMap type="com.ggiri.root.project.dto.ProjectRepDTO" id="reply">
		<result property="no" column="no"/>
		<result property="bno" column="bno"/>
		<result property="grp" column="grp"/>
		<result property="grps" column="grps"/>
		<result property="grpl" column="grpl"/>
		<result property="id" column="id"/>
		<result property="content" column="content"/>
		<result property="wdate" column="wdate"/>
	</resultMap>


	<select id="projectList" resultMap="project">
		SELECT * FROM ggiriProject
	</select>
	
	<select id="projectView" resultMap="project">
		SELECT * FROM ggiriProject WHERE projectNum=#{projectNum}
	</select>
	
	<insert id="insertPro">
<<<<<<< HEAD
		INSERT INTO ggiriProject(projectNum, title, skill, content, id) VALUES(ggiriProject_seq.nextval, #{title}, #{skill}, #{content}, #{id})
=======
		INSERT INTO ggiriProject(projectNum, title, content, id) 
		VALUES(ggiriProject_seq.nextval, #{title}, #{content}, #{id})
>>>>>>> branch 'main' of https://github.com/Lab0nG/junho.git
	</insert>
	
	<update id="proHit">
		UPDATE ggiriProject SET proHit=proHit+1 WHERE projectNum=#{projectNum}
	</update>
	
	<update id="modify">
		UPDATE ggiriProject SET title=#{title}, content=#{content} WHERE projectNum=#{projectNum}
	</update>
	
	<delete id="delete">
		DELETE FROM ggiriProject WHERE projectNum=#{projectNum}
	</delete>
	
	<!-- 전체 프로젝트 개수 조회 -->
	<select id="getProjectCount" resultType="int">
	    SELECT COUNT(*) FROM ggiriProject
	</select>
	
	<!-- 페이지 단위로 프로젝트 목록 조회 -->
	<select id="getProjectList" parameterType="map" resultMap="project">
	    SELECT *
	    FROM (
	        SELECT ROWNUM AS rnum, p.*
	        FROM (
	            SELECT *
	            FROM ggiriProject
	            ORDER BY projectNum DESC
	        ) p
	        WHERE ROWNUM &lt;= #{endRow}
	    )
	    WHERE rnum &gt;= #{startRow}
	</select>
	
	<!-- 검색 조건에 따른 프로젝트 개수 조회 -->
	<select id="getProjectCountBySearch" resultType="int">
	    SELECT COUNT(*) FROM ggiriProject
	    WHERE
	    <choose>
	        <when test="condition == 'titleContent'">
	            (title LIKE '%' || #{keyword} || '%' OR content LIKE '%' || #{keyword} || '%')
	        </when>
	        <when test="condition == 'title'">
	            title LIKE '%' || #{keyword} || '%'
	        </when>
	        <when test="condition == 'id'">
	            id LIKE '%' || #{keyword} || '%'
	        </when>
	    </choose>
	</select>
	
	<!-- 검색 조건에 따른 프로젝트 목록 조회 -->
	<select id="getProjectListBySearch" parameterType="map" resultMap="project">
	    SELECT *
	    FROM (
	        SELECT ROWNUM AS rnum, p.*
	        FROM (
	            SELECT *
	            FROM ggiriProject
	            WHERE
	            <choose>
	                <when test="condition == 'titleContent'">
	                    (title LIKE '%' || #{keyword} || '%' OR content LIKE '%' || #{keyword} || '%')
	                </when>
	                <when test="condition == 'title'">
	                    title LIKE '%' || #{keyword} || '%'
	                </when>
	                <when test="condition == 'id'">
	                    id LIKE '%' || #{keyword} || '%'
	                </when>
	            </choose>
	            ORDER BY projectNum DESC
	        ) p
	        WHERE ROWNUM &lt;= #{endRow}
	    )
	    WHERE rnum &gt;= #{startRow}
	</select>
	
	<!-- <select id="ltlikecount" resultType="Integer" parameterType="kr.co.korea.beans.LikeBean">
		select count(ltlike) from liketable where ltmid=#{ltmid} and ltbid=#{ltbid}
	</select>
	
	<insert id="likeinsert" parameterType="kr.co.korea.beans.LikeBean">
		insert into liketable(ltmid,ltbid)
		values (#{ltmid},#{ltbid})
	</insert>
	
	<select id="ltlikegetinfo" resultType="Integer" parameterType="kr.co.korea.beans.LikeBean">
		select ltlike from liketable where ltmid=#{ltmid} and ltbid=#{ltbid}
	</select>
	
	<update id="likeupdate" parameterType="kr.co.korea.beans.LikeBean">
		update liketable
		set <include refid="cal"></include>
		where ltmid=#{ltmid} and ltbid=#{ltbid}
	</update>
	 -->
<!-- 	<sql id="cal">
		<if test="likeID == 1">
			likeID = 0
		</if> 
		
		<if test="likeID == 0">
			likeID = likeID + 1 
		</if>
	</sql> -->
	
	<update id="increaseLikeCount">
		UPDATE ggiriProject
		SET likeID = CASE
	    WHEN likeID = 0 THEN 1
	    ELSE 0
	    END
		WHERE projectNum = #{projectNum};
	</update>
	
	<select id="getLikeIdByUser" parameterType="map" resultType="int">
	    SELECT likeId
	    FROM your_table_name
	    WHERE projectNum = #{projectNum} AND id = #{id}	
	</select>
	
	<!-- 좋아요 추가 -->
	<insert id="picture_heart_save" parameterType="com.ggiri.root.mybatis.picture.PictureHeartTO">
	    insert into p_heart
	    values(0, #{bno}, #{userid})
	</insert>
	<update id="picture_heart_up" parameterType="com.ggiri.root.mybatis.picture.PictureTO">
	    update p_board set heart=heart+1 
	    where no=#{no}
	</update>
	
	<!-- 좋아요 삭제 -->
	<delete id="picture_heart_remove" parameterType="com.ggiri.root.mybatis.picture.PictureHeartTO">
	    delete from p_heart
	    where bno=#{bno} and userid=#{userid}
	</delete>
	<update id="picture_heart_down" parameterType="com.ggiri.root.mybatis.picture.PictureTO">
	    update p_board set heart=heart-1 
	    where no=#{no}
	</update>
	
	<!-- 좋아요 추가/삭제시 좋아요 갯수 가져오기 -->
	<select id="picture_heart_count" parameterType="com.ggiri.root.mybatis.picture.PictureTO" resultType="com.ggiri.root.mybatis.picture.PictureTO">
	    select heart 
	    from p_board
	    where no=#{no}
	</select>
	
	<!-- <update id="increaseLikeCount">
	    UPDATE ggiriProject
	    SET likeID = likeID + 1
	    WHERE projectNum = #{projectNum}
	</update>
	
	<update id="increaseLikeCountByUser">
	    UPDATE ggiriProject
	    SET likeID = likeID + 1
	    WHERE projectNum = #{projectNum} AND id = #{id}
	</update> -->
	
	<!-- <select id="getProjectButton" parameterType="map" resultMap="project">
	SELECT *
	    FROM (
	        SELECT ROWNUM AS rnum, p.*
	        FROM (
	            SELECT *
	            FROM ggiriProject
	            WHERE skill LIKE
	            <choose>
	                <when test="key == 'java'">
	                    title LIKE '%' || #{key} || '%'
	                </when>
	                <when test="key == 'server'">
	                    title LIKE #{key}
	                </when>
	                <when test="key == 'id'">
	                    id LIKE '%' || #{keyword} || '%'
	                </when>
	            </choose>
	            ORDER BY projectNum DESC
	        ) p
	        WHERE ROWNUM &lt;= #{endRow}
	    )
	    WHERE rnum &gt;= #{startRow}
	</select> -->
<<<<<<< HEAD
=======
	
	<!-- 댓글 -->
	<insert id="addReply">
		INSERT INTO reply(id, content, write_num)
		VALUES(#{id}, #{content}, #{write_num})
	</insert>
	
	<insert id="addReplyTest">
		INSERT INTO reply(no, bno, grp, grps, grpl, id, content)
		VALUES(reply_seq.nextval, #{bno}, #{grp}, 0, 0, #{id}, #{content})
	</insert>
	
	<select id="getRepList" resultMap="reply">
		SELECT * FROM reply WHERE bno=#{bno}
	</select>
	
	<!-- 대댓글 -->
	<insert id="re_addReplyTest">
		INSERT INTO reply(bno, grp, grps, grpl, id, content)
		VALUES(#{bno}, #{grp}, 0, #{grpl}, #{id}, #{content})
	</insert>
	
	<select id="re_getRepList" resultMap="reply">
		SELECT * FROM reply WHERE bno=#{bno}
	</select>
	
>>>>>>> branch 'main' of https://github.com/Lab0nG/junho.git
</mapper>
