<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ggiri.root.mybatis.project.ProjectMapper">

	<resultMap type="com.ggiri.root.project.dto.ProjectDTO" id="project">
		<id property="projectNum" column="projectNum"/>
		<result property="projectNum" column="projectNum"/>
		<result property="memberNum" column="memberNum"/>
		<result property="title" column="title"/>
		<result property="project" column="project"/>
		<result property="content" column="content"/>
		<result property="prodate" column="prodate"/>
		<result property="proHit" column="proHit"/>
		<result property="id" column="id"/>
		<result property="skill" column="skill"/>
	</resultMap>
	
	<!-- 프로젝트 리스트 페이지를 위한 작업 -->
	
	<resultMap type="com.ggiri.root.project.dto.ProjectDTO" id="projectjop">
		<id property="projectNum" column="projectNum"/>
		<result property="memberNum" column="memberNum"/>
		<result property="title" column="title"/>
		<result property="content" column="content"/>
		<result property="prodate" column="prodate"/>
		<result property="proHit" column="proHit"/>
		<result property="id" column="id"/>
		<result property="like_check" column="like_check"/>
		<result property="skill" column="skill"/>
		<result property="job" column="job"/>
	</resultMap>
	
	<resultMap type="com.ggiri.root.project.dto.ProjectRepDTO" id="reply">
      <id property="no" column="no"/>
      <result property="memberNum" column="memberNum"/>
      <result property="bno" column="bno"/>
      <result property="id" column="id"/>
      <result property="content" column="content"/>
      <result property="wdate" column="wdate"/>
   </resultMap>
	
	<!-- 프로젝트 리스트  -->
	<select id="selectJob" resultMap="projectjop">
		SELECT P.*, f.job
		FROM ggiriProject P
		LEFT outer JOIN ggiriFree_insert F 
		on F.id = P.id
	</select>
	
	<select id="selectSnsJob" resultMap="projectjop">
		SELECT P.*, f.job
		FROM ggiriProject P
		LEFT outer JOIN ggiriFree_insert F 
		on F.id = P.id
	</select>
	<!-- 프로젝트 리스트 끝 -->
	
	
	<select id="projectList" resultMap="project">
		SELECT * FROM ggiriProject ORDER BY projectNum DESC
	</select>
	
	<select id="projectView" resultMap="project">
		SELECT * FROM ggiriProject WHERE projectNum=#{projectNum}
	</select>
	
	<insert id="insertPro">
		INSERT INTO ggiriProject(projectNum, memberNum, title, project, content, id, skill) 
		VALUES(ggiriProject_seq.nextval, #{memberNum}, #{title}, #{project}, #{content}, #{id}, #{skill})
	</insert>
	
	<update id="proHit">
		UPDATE ggiriProject SET proHit=proHit+1 WHERE projectNum=#{projectNum}
	</update>
	
	<update id="modify">
		UPDATE ggiriProject SET title=#{title}, content=#{content}, project=#{project} WHERE projectNum=#{projectNum}
	</update>
	
	<delete id="delete">
		DELETE FROM ggiriProject WHERE projectNum=#{projectNum}
	</delete>
	
	<select id="getProjectInfo" resultMap="project">
		SELECT * FROM ggiriProject WHERE projectNum=#{projectNum}
	</select>
	
	
	
	<!-- 관리자 페이지 프로젝트 삭제 -->
	<delete id="proDelete">
		DELETE FROM ggiriProject WHERE projectNum=#{projectNum}
	</delete>
	
	<select id="adminProjectList" resultMap="project">
		SELECT * FROM ggiriProject
	</select>
	
	<!-- 전체 프로젝트 개수 조회 -->
	<select id="getProjectCount" resultType="int">
	    SELECT COUNT(*) FROM ggiriProject
	</select>
	
	<!-- 페이지 단위로 프로젝트 목록 조회 -->
	<select id="getProjectList" parameterType="map" resultMap="project">
	    SELECT *
	    FROM (
	        SELECT ROWNUM AS rnum, p.*
	        FROM ( 
	            SELECT *
	            FROM ggiriProject
	            ORDER BY projectNum DESC
	        ) p
	        WHERE ROWNUM &lt;= #{endRow}
	    )
	    WHERE rnum &gt;= #{startRow} 
	</select>
	
	<!-- 검색 조건에 따른 프로젝트 개수 조회 -->
	<select id="getProjectCountBySearch" resultType="int">
	    SELECT COUNT(*) FROM ggiriProject
	    WHERE
	    <choose>
	        <when test="condition == 'titleContent'">
	            (title LIKE '%' || #{keyword} || '%' OR content LIKE '%' || #{keyword} || '%')
	        </when>
	        <when test="condition == 'title'">
	            title LIKE '%' || #{keyword} || '%'
	        </when>
	        <when test="condition == 'id'">
	            id LIKE '%' || #{keyword} || '%'
	        </when>
	    </choose>
	</select>
	
	<!-- 검색 조건에 따른 프로젝트 목록 조회 -->
	<select id="getProjectListBySearch" parameterType="map" resultMap="project">
		SELECT *
	    FROM (
	        SELECT ROWNUM AS rnum, p.*
	        FROM (
	            SELECT *
	            FROM ggiriProject
	            WHERE
	            <choose>
	                <when test="condition == 'titleContent'">
	                    (title LIKE '%' || #{keyword} || '%' OR content LIKE '%' || #{keyword} || '%')
	                </when>
	                <when test="condition == 'title'">
	                    title LIKE '%' || #{keyword} || '%'
	                </when>
	                <when test="condition == 'id'">
	                    id LIKE '%' || #{keyword} || '%'
	                </when>
	            </choose>
	            ORDER BY projectNum DESC
	        ) p
	        WHERE ROWNUM &lt;= #{endRow}
	    )
	    WHERE rnum &gt;= #{startRow}
	</select>
	
	<!-- 댓글 -->
	<insert id="addReplyTest">
		INSERT INTO ggiriReply(no, memberNum, bno, id, content)
		VALUES(reply_seq.nextval, #{memberNum}, #{bno}, #{id}, #{content})
	</insert>
	
	<select id="getRepList" resultMap="reply">
		SELECT * FROM ggiriReply WHERE bno=#{bno}
	</select>
	
	<select id="adminReplyList" resultMap="reply">
		SELECT * FROM ggiriReply
	</select>
	
	<delete id="repDelete">
		DELETE FROM ggiriReply WHERE no=#{no}
	</delete>
	
	<update id="modifyModalRep">
		UPDATE ggiriReply SET content=#{content} WHERE no=#{no}
	</update>
	
<!-- 	<select id="modalContent">
		SELECT * FROM ggiriReply WHERE bno=#{bno}
	</select> -->
	
</mapper>
